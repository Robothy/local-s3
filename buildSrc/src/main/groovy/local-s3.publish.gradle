import io.franzbecker.gradle.lombok.task.DelombokTask

plugins {
    id 'maven-publish'
    id 'io.franzbecker.gradle-lombok'
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {

    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = project.name
            from components.java

            pom {
                name = "LocalS3"
                description 'An AmazonS3 service implementation.'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'robothy'
                        name = "Fuxiang Luo"
                        email = "robothyluo@gmail.com"
                    }
                }

                scm {
                    url = "https://github.com/Robothy/local-s3"
                }

            }
        }
    }

    repositories {
        mavenLocal()

        repositories {
            mavenLocal()
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/Robothy/local-s3")
                credentials {
                    username = project.findProperty("GITHUB_USERNAME") ?: System.getenv("GITHUB_USERNAME")
                    password = project.findProperty("GITHUB_TOKEN") ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}



task delombok(type: DelombokTask, dependsOn: compileJava) {
    ext.outputDir = file("$buildDir/delombok")
    outputs.dir(outputDir)
    sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
}

javadoc {
    dependsOn delombok
    source = delombok.outputDir
    //failOnError = false
}