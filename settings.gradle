pluginManagement {

    resolutionStrategy {
        eachPlugin {
            if (requested.id.id.equals('robothy-platform-release')) {
                useModule("com.robothy:platform-release-gradle-plugin:${robothyPlatformReleaseGradlePluginVersion}")
            }
        }
    }

    repositories {
        mavenLocal()

        maven {
            url = 'https://maven.pkg.github.com/robothy-platform/maven'
            credentials {
                username = "${GITHUB_USERNAME}"
                password = "${GITHUB_TOKEN}"
            }
        }

//        maven {
//            url = 'https://maven.aliyun.com/repository/gradle-plugin'
//        }

        gradlePluginPortal()

    }
}

rootProject.name = 'local-s3'
include 'local-s3-interationtest'
include 'local-s3-core'
include 'local-s3-rest'
include 'local-s3-jupiter'
include 'local-s3-datatypes'
include 'local-s3-docker'
include 'local-s3-testcontainers'

